{{#> layouts/main title=title hideNav=true }}

<!-- Include GitHub Markdown CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/github-markdown-css/github-markdown.min.css">
<link rel="stylesheet" href="/css/markdown.css">

<div class="flex min-h-screen bg-black text-zinc-100">
  <!-- Sidebar Navigation -->
  <div class="w-70 bg-zinc-800 border-r border-zinc-700 flex flex-col fixed h-screen overflow-y-auto z-10 markdown-sidebar">
    <!-- Sidebar Header -->
    <div class="p-5 border-b border-zinc-700 bg-zinc-900">
      <h3 class="text-lg font-semibold text-zinc-400 mb-1">📚 Tài liệu API</h3>
      <p class="text-sm text-zinc-400 m-0">Chọn module để xem</p>
    </div>
    
    <!-- Navigation -->
    <nav class="flex-1 py-4">
      <ul class="list-none m-0 p-0">
        {{#each modules}}
        <li class="mx-2 my-1">
          <a href="/docs/markdown/{{name}}" 
             class="flex items-center px-4 py-3 text-sm text-zinc-100 no-underline rounded-md transition-all duration-200 hover:bg-zinc-600 hover:text-white {{#if active}}bg-zinc-600 text-white font-medium{{/if}}">
            <span class="flex-1">{{title}}</span>
          </a>
        </li>
        {{/each}}
      </ul>
    </nav>

    <!-- Sidebar Footer -->
    <div class="border-t border-zinc-700 p-4 bg-zinc-900">
      <div class="flex flex-col gap-2">
        <a href="/docs" class="flex items-center px-3 py-2 text-xs text-zinc-400 no-underline rounded transition-all duration-200 hover:bg-zinc-700 hover:text-blue-400">
          <span class="mr-2">🔄</span> Swagger UI
        </a>
        <a href="/docs/json" class="flex items-center px-3 py-2 text-xs text-zinc-400 no-underline rounded transition-all duration-200 hover:bg-zinc-700 hover:text-blue-400">
          <span class="mr-2">📄</span> OpenAPI JSON
        </a>
      </div>
    </div>
  </div>

  <!-- Main Content -->
  <div class="flex-1 ml-70 p-5 max-w-full">
    {{#if markdownContent}}
    <!-- Quick Actions Bar -->
    <div class="bg-zinc-800 border border-zinc-700 rounded-lg p-4 mb-4 flex justify-between items-center flex-wrap gap-4">
      <div class="flex items-center gap-4 flex-wrap">
        <span class="text-sm font-semibold text-zinc-100">📄 {{fileName}}</span>
        <span class="text-xs text-zinc-400 bg-zinc-700 px-2 py-1 rounded">{{fileSize}} chars</span>
      </div>
      
      <div class="flex gap-2 flex-wrap">
        <button onclick="copyMarkdown()" class="inline-flex items-center px-3 py-1.5 text-xs font-medium bg-zinc-700 text-zinc-100 border border-zinc-600 rounded hover:bg-zinc-600 hover:border-zinc-500 transition-all duration-200">
          <span class="mr-1">📋</span> Copy MD
        </button>
        <button onclick="copyHTML()" class="inline-flex items-center px-3 py-1.5 text-xs font-medium bg-zinc-700 text-zinc-100 border border-zinc-600 rounded hover:bg-zinc-600 hover:border-zinc-500 transition-all duration-200">
          <span class="mr-1">📄</span> Copy HTML
        </button>
        <a href="/docs/api/{{moduleName}}?format=markdown" 
           class="inline-flex items-center px-3 py-1.5 text-xs font-medium bg-zinc-700 text-zinc-100 border border-zinc-600 rounded hover:bg-zinc-600 hover:border-zinc-500 transition-all duration-200 no-underline"
           download="{{fileName}}">
          <span class="mr-1">💾</span> Download
        </a>
        <button onclick="toggleView()" id="view-toggle" class="inline-flex items-center px-3 py-1.5 text-xs font-medium bg-green-600 text-white border border-green-600 rounded hover:bg-green-700 hover:border-green-700 transition-all duration-200">
          <span class="mr-1">📝</span> <span id="toggle-text">Raw</span>
        </button>
      </div>
    </div>

    <!-- Markdown Content -->
    <div class="bg-zinc-900 border border-zinc-700 rounded-lg overflow-hidden">
      <!-- Rendered HTML (default view) -->
      <div id="html-content" class="markdown-body-dark markdown-body transition-opacity duration-300" style="max-width: none;">
        {{{htmlContent}}}
      </div>
      
      <!-- Raw Markdown (hidden by default) -->
      <pre id="markdown-raw" class="hidden m-0 p-6 bg-zinc-900 text-zinc-100 font-mono text-sm leading-relaxed overflow-x-auto max-h-screen overflow-y-auto whitespace-pre-wrap break-words markdown-scrollbar transition-opacity duration-300">{{markdownContent}}</pre>
    </div>
    {{else}}
    <!-- Empty State -->
    <div class="bg-zinc-800 border border-zinc-700 rounded-lg p-15 text-center">
      <div class="text-5xl mb-5 opacity-60">📄</div>
      <h2 class="text-xl font-medium text-zinc-100 mb-2">Chọn tài liệu để xem</h2>
      <p class="text-zinc-400 mb-8">Chọn một module từ sidebar để xem nội dung markdown tương ứng.</p>
      
      <div class="text-left">
        <h3 class="text-lg font-medium text-zinc-100 mb-5">Modules có sẵn:</h3>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mt-5">
          {{#each modules}}
          <a href="/docs/markdown/{{this.name}}" class="flex flex-col items-center p-5 bg-zinc-800 border border-zinc-700 rounded-lg no-underline text-zinc-100 transition-all duration-200 hover:bg-zinc-700 hover:border-blue-400 hover:text-blue-400 hover:-translate-y-0.5 hover:shadow-lg hover:shadow-blue-400/15">
            <div class="text-2xl mb-2">
              {{#eq this.name "auth"}}🔐{{/eq}}
              {{#eq this.name "order"}}📋{{/eq}}
              {{#eq this.name "product"}}📦{{/eq}}
              {{#eq this.name "stock"}}📊{{/eq}}
              {{#eq this.name "category"}}🏷️{{/eq}}
              {{#eq this.name "user"}}👤{{/eq}}
              {{#eq this.name "dashboard"}}📈{{/eq}}
            </div>
            <div class="font-medium text-center">{{this.title}}</div>
          </a>
          {{/each}}
        </div>
      </div>
    </div>
    {{/if}}
  </div>
</div>

<style>
/* Custom width for sidebar */
.w-70 {
  width: 280px;
}

.ml-70 {
  margin-left: 280px;
}

/* GitHub Markdown Dark Theme Override */
.markdown-body-dark {
  background: #0d1117 !important;
  color: #e6edf3 !important;
  padding: 25px !important;
  border: none !important;
}

.markdown-body-dark h1,
.markdown-body-dark h2,
.markdown-body-dark h3,
.markdown-body-dark h4,
.markdown-body-dark h5,
.markdown-body-dark h6 {
  color: #f0f6fc !important;
  border-bottom-color: #30363d !important;
}

.markdown-body-dark table {
  background: #161b22 !important;
  border-color: #30363d !important;
}

.markdown-body-dark table th {
  background: #21262d !important;
  color: #f0f6fc !important;
  border-color: #30363d !important;
}

.markdown-body-dark table td {
  border-color: #30363d !important;
}

.markdown-body-dark table tr:nth-child(2n) {
  background: #161b22 !important;
}

.markdown-body-dark table tr:hover {
  background: #21262d !important;
}

.markdown-body-dark code {
  background: #161b22 !important;
  color: #f85149 !important;
  padding: 2px 4px !important;
  border-radius: 3px !important;
}

.markdown-body-dark pre {
  background: #161b22 !important;
  border: 1px solid #30363d !important;
  border-radius: 6px !important;
}

.markdown-body-dark pre code {
  background: none !important;
  color: #e6edf3 !important;
  padding: 0 !important;
}

.markdown-body-dark blockquote {
  color: #8b949e !important;
  border-left-color: #30363d !important;
}

.markdown-body-dark a {
  color: #58a6ff !important;
}

.markdown-body-dark a:hover {
  color: #79c0ff !important;
}

/* Scrollbar Styling for Dark Theme */
.markdown-sidebar::-webkit-scrollbar,
.markdown-scrollbar::-webkit-scrollbar {
  width: 8px;
}

.markdown-sidebar::-webkit-scrollbar-track,
.markdown-scrollbar::-webkit-scrollbar-track {
  background: #161b22;
}

.markdown-sidebar::-webkit-scrollbar-thumb,
.markdown-scrollbar::-webkit-scrollbar-thumb {
  background: #30363d;
  border-radius: 4px;
}

.markdown-sidebar::-webkit-scrollbar-thumb:hover,
.markdown-scrollbar::-webkit-scrollbar-thumb:hover {
  background: #484f58;
}

/* Responsive Design */
@media (max-width: 768px) {
  .w-70 {
    width: 100%;
  }
  
  .ml-70 {
    margin-left: 0;
  }
  
  .markdown-sidebar {
    position: relative;
    height: auto;
    border-right: none;
    border-bottom: 1px solid #374151;
  }
}
</style>

<script>
let isRawView = false;

function toggleView() {
  const htmlContent = document.getElementById('html-content');
  const markdownRaw = document.getElementById('markdown-raw');
  const toggleText = document.getElementById('toggle-text');
  const toggleBtn = document.getElementById('view-toggle');
  
  if (isRawView) {
    // Switch to HTML view
    htmlContent.classList.remove('hidden');
    markdownRaw.classList.add('hidden');
    toggleText.textContent = 'Raw';
    toggleBtn.querySelector('span').textContent = '📝';
    isRawView = false;
  } else {
    // Switch to raw view
    htmlContent.classList.add('hidden');
    markdownRaw.classList.remove('hidden');
    toggleText.textContent = 'HTML';
    toggleBtn.querySelector('span').textContent = '🌐';
    isRawView = true;
  }
}

function copyMarkdown() {
  const content = document.getElementById('markdown-raw').textContent;
  copyToClipboard(content, 'Markdown copied to clipboard!');
}

function copyHTML() {
  const content = document.getElementById('html-content').innerHTML;
  copyToClipboard(content, 'HTML copied to clipboard!');
}

function copyToClipboard(content, message) {
  navigator.clipboard.writeText(content).then(() => {
    showNotification(message, 'success');
  }).catch(err => {
    console.error('Failed to copy:', err);
    showNotification('Failed to copy to clipboard', 'error');
  });
}

function showNotification(message, type = 'success') {
  const notification = document.createElement('div');
  const bgColor = type === 'success' ? '#059669' : '#dc2626';
  const icon = type === 'success' ? '✅' : '❌';
  
  notification.style.cssText = `
    position: fixed; 
    top: 20px; 
    right: 20px; 
    background: ${bgColor}; 
    color: white; 
    padding: 12px 20px; 
    border-radius: 6px; 
    z-index: 1000; 
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    border: 1px solid rgba(255,255,255,0.1);
  `;
  notification.textContent = `${icon} ${message}`;
  document.body.appendChild(notification);
  
  setTimeout(() => {
    if (document.body.contains(notification)) {
      document.body.removeChild(notification);
    }
  }, 3000);
}

// Highlight active module in sidebar based on current URL
document.addEventListener('DOMContentLoaded', function() {
  const currentPath = window.location.pathname;
  const moduleLinks = document.querySelectorAll('.markdown-sidebar a[href^="/docs/markdown/"]');
  
  moduleLinks.forEach(link => {
    if (link.getAttribute('href') === currentPath) {
      link.classList.add('bg-blue-600', 'text-white', 'font-medium');
      link.classList.remove('hover:bg-zinc-700', 'hover:text-blue-400');
    }
  });
});
</script>

{{/layouts/main}}
